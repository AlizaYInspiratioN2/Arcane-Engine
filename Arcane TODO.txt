TODO:
-Finish texure loading by figuring out how we can neatly configure loading texture when using the TextureLoader (maybe some sort of texture settings object with default values)
-Better define the render passes with names so RenderDoc can easily see the passes
-Clean up shaders so they are properly adding up light and multiplying with sampled data only when needed. Instead of oversampling
-Terrain needs multiple light support (only supports 1 atm)
-Investigate red specular? from point light on Sponza
-Should my render target attachments have mips generated by textureloader (really depends on what the render target is used for, so yes would be a safe bet)?

Shadow mapping:
-Multisample render buffer issue needs to be dealt with. Including stuff like texture wrapping and filtering options, can they be provided?
-Investigate crappy self shadows on Model, must be an Crysis model issue related to mirrored data or something strange

Normal mapping:
-Make normal mapping code work on terrain (need to calculate tangents and bitangents for terrain vertices)
-Investigate if the normals are right from normal mapping and their strange artifacts!
-Fix normal mapping not working on basic shapes (Did I ever specify tangents and bitangents for them lol?)
-Remove bad shaders or rename the ones that we have to be more fitting

Post Processing:
-See if super sampling can be an easy integration. Since the post processor will blit to a RenderTarget that matches the screen's resolution
-Update README with new screenshots and features!!